tabla2<-table(be$combustible);tabla2
#Probabilidades
#prob<-dbinom(dimensión de x, máximo valor de x,prob éxito(si no te lo dan se estima))
prob<-(5/49,4/49,7/49)
#Probabilidades
#prob<-dbinom(dimensión de x, máximo valor de x,prob éxito(si no te lo dan se estima))
prob<-((5/49),(4/49),(7/49)
#Probabilidades
#prob<-dbinom(dimensión de x, máximo valor de x,prob éxito(si no te lo dan se estima))
prob=((5/49),(4/49),(7/49)
#Probabilidades
#prob<-dbinom(dimensión de x, máximo valor de x,prob éxito(si no te lo dan se estima))
prob=c(5/49),(4/49),(7/49)
#Probabilidades
#prob<-dbinom(dimensión de x, máximo valor de x,prob éxito(si no te lo dan se estima))
prob=c(5/49),(4/49),(7/49)
#Probabilidades
#prob<-dbinom(dimensión de x, máximo valor de x,prob éxito(si no te lo dan se estima))
prob= c((5/49),(4/49),(7/49))
chisq.test(tabla2,p=prob)
#Probabilidades
#prob<-dbinom(dimensión de x, máximo valor de x,prob éxito(si no te lo dan se estima))
prob= c((5/49),(4/49),(7/49))
chisq.test(tabla2,p=prob)
tabla<-table(be$combustible)
tabla
prob<-c(5,4,7)/3
# Método exacto
library(RVAideMemoire)
#Pasar la tabla inicial a vector
tabla1<-as.vector(tabla)
multinomial.test(tabla1,prob)
###################################################3
di=subset(datos,empresa=="Di")
be=subset(datos,empresa=="Be")
tabla<-table(be$combustible)
rela<-c(5,4,7)
prob=rela/sum(rela)
#Pasar la tabla inicial a vector
tabla1<-as.vector(tabla)
multinomial.test(tabla1,prob)
###################################################3
di=subset(datos,empresa=="Di")
library(exact2x2)
mcnemar.exact(di$papeleta1, di$papeleta2)
library(outliers)
#Two.side=T: superior o inferior
grubbs.test(di$ingreso4,two.sided=T)
help(grubbs)
help(grubbs)
??grubbs
#Two.side=T: superior o inferior
grubbs.test(resta$Monto,type=11,two.sided=T)
#Two.side=T: superior o inferior
grubbs.test(di$ingreso4,type=11,two.sided=T)
###################################################3
di=subset(datos,empresa=="Di")
library(outliers)
#Two.side=T: superior o inferior
grubbs.test(di$ingreso4,type=11,two.sided=T)
#Two.side=T: superior o inferior
grubbs.test(di$ingreso4,type=11,two.sided=F)
#Two.side=T: superior o inferior
grubbs.test(di$ingreso4,type=11,two.sided=T)
datos=read.delim("clipboard")
library(NSM3)
ca<-subset(datos,empresa=="Ca")
ub=subset(datos,empresa=="Ub")
library(DescTools)
RunsTest(ca$ingreso2,ub$ingreso2, alternative="two.sided")
#Método aproximado: Usar este!
pLepage(ca$ingreso2,ub$ingreso2, method="Asymptotic")
library(lawstat)
symmetry.test(ub$ingreso1,option="MGG",boot=F)
library(exactRankTests)
#wilcox.exact(resta$Satisfacción,mu=valor hipotético,alternative="ltipo de prueba")
wilcox.exact(ub$ingreso1,mu=125,alternative="g")
# Intervalo de confianza
#Siempre: tipo de prueba ="t"
wilcox.exact(ub$ingreso1,,alternative="t",
conf.int=T,conf.level=0.98)
# Intervalo de confianza
#Siempre: tipo de prueba ="t"
wilcox.exact(ub$ingreso1,,alternative="t",
conf.int=T,conf.level=0.98)
be=subset(datos,empresa=="Be")
tabla<-table(be$combustible)
rela<-c(5,4,7)
prob=rela/sum(rela)
# Método exacto
library(RVAideMemoire)
#Pasar la tabla inicial a vector
tabla1<-as.vector(tabla)
multinomial.test(tabla1,prob)
###################################################3
di=subset(datos,empresa=="Di")
library(outliers)
#Two.side=T: superior o inferior
grubbs.test(di$ingreso4,type=11,two.sided=T)
library(exact2x2)
mcnemar.exact(di$papeleta1, di$papeleta2)
ca<-subset(datos,empresa=="Ca")
ub=subset(datos,empresa=="Ub")
library(DescTools)
RunsTest(ca$ingreso2,ub$ingreso2, alternative="two.sided")
library(lawstat)
symmetry.test(ub$ingreso1,option="MGG",boot=F)
library(DescTools)
RunsTest(ca$ingreso2,ub$ingreso2, alternative="two.sided")
#Método aproximado: Usar este!
pLepage(ca$ingreso2,ub$ingreso2, method="Asymptotic")
datos=read.delim("clipboard")
datos=read.delim("clipboard")
View(datos)
##Pregunta 1
c2<-subset(datos,local==C2)
##Pregunta 1
c2<-subset(datos,local=="C2")
b2<-subset(datos,local=="B2")
b1<-subset(datos,local=="B1")
#Prueba
library(agricolae)
tapply(c2$puntaje4, b2$puntaje4, b1$puntaje4, mean)
tapply(c2$puntaje4, b2$puntaje4, b1$puntaje4, mean)
kruskal(c2$puntaje4, b2$puntaje4, b1$puntaje4, alpha=0.03, console=T)
tapply(c2$puntaje4, b2$puntaje4, b1$puntaje4, mean)
b1=subset(datos,datos$local=="B1")
b2=subset(datos,datos$local=="B2")
b3=subset(datos,datos$local=="B3")
c1=subset(datos,datos$local=="C1")
c2=subset(datos,datos$local=="C2")
c3=subset(datos,datos$local=="C3")
##Pregunta 2
library(RVAideMemoire)
y=c(c3$puntaje1,c3$puntaje3 ,c3$puntaje4)
##Pregunta 1 - Van Der Waerden
#Prueba
datos2=rbind(c2,b2,b1)
library(agricolae)
kruskal(datos2$puntaje4, datos2$local, alpha=0.03,
console=T)
trat=trat<-as.factor(c(rep(1,25),rep(3,25),rep(4,25)))
y=c(c3$puntaje1,c3$puntaje3 ,c3$puntaje4)
trat=trat<-as.factor(c(rep(1,25),rep(2,25),rep(3,25)))
#trat=factor(rep(1:3,rep(40,3)))
bloq=rep(1:25,3)
cochran.qtest(y~trat|bloq,alpha=0.03,p.method="none")
##Pregunta 3- Page
library(DescTools)
y3=c(c1$puntaje1, c1$puntaje2, c1$puntaje4)
trat3=trat<-as.factor(c(rep(1,25),rep(2,25),rep(4,25)))
bloq3=rep(1:25,3)
PageTest(y3,trat3,bloq3)
##Pregunta 2
library(RVAideMemoire)
y=c(c3$puntaje1,c3$puntaje3 ,c3$puntaje4)
trat=trat<-as.factor(c(rep(1,25),rep(2,25),rep(4,25)))
#trat=factor(rep(1:3,rep(40,3)))
bloq=rep(1:25,3)
cochran.qtest(y~trat|bloq,alpha=0.03,p.method="none")
datos1=rbind(c2,c1,b1)
cen<-factor(datos1$local,ordered=T)
library(DescTools)
JonckheereTerpstraTest(datos1$puntaje4,cen,
alternative = "i")
library(DescTools)
JonckheereTerpstraTest(datos1$puntaje4,cen,
alternative = "i")
JonckheereTerpstraTest(datos1$puntaje4,cen,
alternative = "d")
JonckheereTerpstraTest(datos1$puntaje4,cen,
alternative = "i")
##Pregunta 5 -Levene
library(lawstat)
datos5=rbind(c2,b3,c3)
#utilizar la correción por la mediana
levene.test(datos5$puntaje2,datos5$local)
##Pregunta 3- Page
library(DescTools)
y3=c(c1$puntaje1, c1$puntaje2, c1$puntaje4)
trat3=trat<-as.factor(c(rep(1,25),rep(2,25),rep(4,25)))
bloq3=rep(1:25,3)
PageTest(y3,trat3,bloq3)
p1=subset(puntaje1, puntaje1>10.5)
p1=subset(datos$puntaje1, puntaje1>10.5)
p1=subset(datos,datos$puntaje1, puntaje1>10.5)
p1=subset(datos,datos$puntaje1>10.5)
p3=subset(datos,datos$puntaje3>10.5)
p4=subset(datos,datos$puntaje4>10.5)
y=c(c3$p1,c3$p3 ,c3$p4)
trat=trat<-as.factor(c(rep(1,25),rep(2,25),rep(4,25)))
#trat=factor(rep(1:3,rep(40,3)))
bloq=rep(1:25,3)
cochran.qtest(y~trat|bloq,alpha=0.03,p.method="none")
##Pregunta 2- Q de Chochran
library(RVAideMemoire)
p1=subset(datos,datos$puntaje1>10)
p3=subset(datos,datos$puntaje3>10)
p4=subset(datos,datos$puntaje4>10)
y=c(c3$p1,c3$p3 ,c3$p4)
trat=trat<-as.factor(c(rep(1,25),rep(2,25),rep(4,25)))
#trat=factor(rep(1:3,rep(40,3)))
bloq=rep(1:25,3)
cochran.qtest(y~trat|bloq,alpha=0.03,p.method="none")
p1=subset(datos,datos$puntaje1>10)
View(p1)
p1=subset(datos,c3$puntaje1>10)
p3=subset(datos,c3$puntaje3>10)
p4=subset(datos,c3$puntaje4>10)
y=c(c3$p1,c3$p3 ,c3$p4)
trat=trat<-as.factor(c(rep(1,25),rep(2,25),rep(4,25)))
#trat=factor(rep(1:3,rep(40,3)))
bloq=rep(1:25,3)
cochran.qtest(y~trat|bloq,alpha=0.03,p.method="none")
y3n=c()
for (i in 1:length(y3)){
if(y3[i]>=11){y3n=c(y3n,1)}else{y3n=c(y3n,0)}
}
bloque3=rep(1:25,3)
trat3=factor(c(rep(1,25),rep(2,25),rep(3,25)))
cochran.qtest(y3n~trat3|bloque3,alpha = 0.03,
p.method = "none")
trat3=factor(c(rep(1,25),rep(2,25),rep(4,25)))
cochran.qtest(y3n~trat3|bloque3,alpha = 0.03,
p.method = "none")
y2=c(c3$puntaje1,c3$puntaje3,c3$puntaje4)
y3=c(c3$puntaje1,c3$puntaje3,c3$puntaje4)
y3n=c()
for (i in 1:length(y3)){
if(y3[i]>=11){y3n=c(y3n,1)}else{y3n=c(y3n,0)}
}
bloque3=rep(1:25,3)
trat3=factor(c(rep(1,25),rep(2,25),rep(4,25)))
cochran.qtest(y3n~trat3|bloque3,alpha = 0.03,
p.method = "none")
##Pregunta 2- Q de Chochran
library(RVAideMemoire)
y3=c(c3$puntaje1,c3$puntaje3,c3$puntaje4)
y3n=c()
for (i in 1:length(y3)){
if(y3[i]>=11){y3n=c(y3n,1)}else{y3n=c(y3n,0)}
}
bloque3=rep(1:25,3)
trat3=factor(c(rep(1,25),rep(2,25),rep(4,25)))
cochran.qtest(y3n~trat3|bloque3,alpha = 0.03,
p.method = "none")
b1=subset(datos,datos$local=="B1")
b2=subset(datos,datos$local=="B2")
b3=subset(datos,datos$local=="B3")
c1=subset(datos,datos$local=="C1")
c2=subset(datos,datos$local=="C2")
c3=subset(datos,datos$local=="C3")
##Pregunta 1 - Kruskal Wallis
#Prueba
datos2=rbind(c2,b2,b1)
library(agricolae)
kruskal(datos2$puntaje4, datos2$local, alpha=0.03,
console=T)
##Pregunta 2- Q de Chochran
library(RVAideMemoire)
y3=c(c3$puntaje1,c3$puntaje3,c3$puntaje4)
y3n=c()
for (i in 1:length(y3)){
if(y3[i]>=11){y3n=c(y3n,1)}else{y3n=c(y3n,0)}
}
bloque3=rep(1:25,3)
trat3=factor(c(rep(1,25),rep(2,25),rep(4,25)))
cochran.qtest(y3n~trat3|bloque3,alpha = 0.03,
p.method = "none")
##Pregunta 3- Page
library(DescTools)
y3=c(c1$puntaje1, c1$puntaje2, c1$puntaje4)
trat3=trat<-as.factor(c(rep(1,25),rep(2,25),rep(4,25)))
bloq3=rep(1:25,3)
PageTest(y3,trat3,bloq3)
##Pregunta 3- Page
library(DescTools)
y3=c(c1$puntaje1, c1$puntaje2, c1$puntaje4)
trat3=trat<-as.factor(c(rep(1,25),rep(2,25),rep(3,25)))
bloq3=rep(1:25,3)
PageTest(y3,trat3,bloq3)
##Pregunta 5 -Levene
library(lawstat)
datos5=rbind(c2,b3,c3)
#utilizar la correción por la mediana
levene.test(datos5$puntaje2,datos5$local)
#utilizar la correción por la mediana
levene.test(datos5$puntaje2,datos5$local, location="median")
##Pregunta 5 -Levene
library(lawstat)
datos5=rbind(c2,b3,c3)
#utilizar la correción por la mediana
levene.test(datos5$puntaje2,datos5$local, location="median")
y3=c(c1$puntaje1, c1$puntaje2, c1$puntaje4)
trat3=trat<-as.factor(c(rep(1,25),rep(2,25),rep(3,25)))
bloq3=rep(1:25,3)
PageTest(y3,trat3,bloq3)
datos1=rbind(c2,c1,b1)
cen<-factor(datos1$local,ordered=T)
library(DescTools)
JonckheereTerpstraTest(datos1$puntaje4,cen,
alternative = "i")
#MEDIDAS DE ASOCIACIÓN
#-----------------------
# Coeficiente de V Cramer
#-----------------------
library(vcd)
install.packages("grid")
#MEDIDAS DE ASOCIACIÓN
#-----------------------
# Coeficiente de V Cramer
#-----------------------
library(vcd)
library(vcd)
#-----------------
# Coeficiente Phi
#-----------------
library(psych)
#Índice de Gamma
library(ryouready)
library(DescTools)
source('D:/UNALM/7. SÉPTIMO CICLO/ESTADÍSTICA NO PARAMÉTRICA/PRÁCTICA/Resumen Pruebas - PC4.R', encoding = 'UTF-8', echo=TRUE)
library(DescTools)
library(DescTools)
library(ryouready)
qf(0.03,9-1,90-9,lower.tail=F)
##################
#  EXAMEN FINAL  #
##################
datos=read.delim("clipboard")
View(datos)
##Pregunta 1
azu=subset(datos,provincia=="Azuay")
bol=subset(datos,provincia=="Bolivar")
cañ=subset(datos,provincia=="Cañar")
elo=subset(datos,provincia=="El Oro")
esm=subset(datos,provincia=="Esmeraldas")
2.2757
##Pregunta 1
azu=subset(datos,provincia=="Azuay")
bol=subset(datos,provincia=="Bolivar")
cañ=subset(datos,provincia=="Cañar")
elo=subset(datos,provincia=="El Oro")
esm=subset(datos,provincia=="Esmeraldas")
gua=subset(datos,provincia=="Guayas")
loj=subset(datos,provincia=="Loja")
man=subset(datos,provincia=="Manabí")
pic=subset(datos,provincia=="Pichincha")
san=subset(datos,provincia=="Santa Elena")
##Pregunta 3
library(RVAideMemoire)
##################
#  EXAMEN FINAL  #
##################
datos=read.delim("clipboard")
azu=subset(datos,provincia=="Azuay")
bol=subset(datos,provincia=="Bolivar")
cañ=subset(datos,provincia=="Cañar")
elo=subset(datos,provincia=="El Oro")
esm=subset(datos,provincia=="Esmeraldas")
gua=subset(datos,provincia=="Guayas")
loj=subset(datos,provincia=="Loja")
man=subset(datos,provincia=="Manabí")
pic=subset(datos,provincia=="Pichincha")
san=subset(datos,provincia=="Santa Elena")
library(RVAideMemoire)
y1=c(esm$monto1,esm$monto3,esm$monto4,esm$monto5)
y=y1>180
bloque1=rep(1:127,4)
esm=subset(datos,provincia=="Esmeraldas")
y=y1>180
bloque1=rep(1:166,4)
trat1=factor(rep(1:4,rep(166,4)))
cochran.qtest(y~trat1|bloque1,alpha = 0.02,
p.method = "none")
##Pregunta 2
ciu2<-subset(datos,provincia=="Cañar"|
provincia=="Esmeraldas"|
provincia=="Bolivar"|
ciudad=="Guayas")
##Pregunta 2
ciu2<-subset(datos,provincia=="Cañar"|
provincia=="Esmeraldas"|
provincia=="Bolivar"|
provincia=="Guayas")
tabla2=table(ciu2$provinica, ciu2$genero)
tabla2=table(ciu2$provincia, ciu2$genero)
chisq.test(tabla2)
ciu2=rbind(cañ,esm,bol,gua)
tabla2=table(ciu2$provincia, ciu2$genero)
chisq.test(tabla2)
qchisq(0.03,3,lower.tail=F)
tabla2=table(ciu2$genero, ciu2$provincia)
chisq.test(tabla2)
##Pregunta 4
ciu4=rbind(azu,bol)
table(ciu4$genero,ciu4$provincia)
tabla4=table(ciu4$genero,ciu4$provincia)
tabla4
fisher.test(tabla4,alternative="l")
tabla6<-matrix(c(60,67,75,79),2,2)
fisher.test(tabla6,alternative="l")
mp1=rbind(pic,gua,azu,loj)
mp1
View(mp1)
library(agricolae)
waerden.test(mp1$monto5, mp1$provincia, alpha=0.02,
console=T)
##Pregunta 5
mp5=rbind(pic,bol,elo,san)
fligner.test(mp5$monto2, mp5$provincia)
##################
#  EXAMEN FINAL  #
##################
datos=read.delim("clipboard")
azu=subset(datos,provincia=="Azuay")
bol=subset(datos,provincia=="Bolivar")
cañ=subset(datos,provincia=="Cañar")
elo=subset(datos,provincia=="El Oro")
esm=subset(datos,provincia=="Esmeraldas")
gua=subset(datos,provincia=="Guayas")
loj=subset(datos,provincia=="Loja")
man=subset(datos,provincia=="Manabí")
pic=subset(datos,provincia=="Pichincha")
san=subset(datos,provincia=="Santa Elena")
mp1=rbind(pic,gua,azu,loj)
library(agricolae)
waerden.test(mp1$monto5, mp1$provincia, alpha=0.02,
console=T)
ciu2=rbind(cañ,esm,bol,gua)
tabla2=table(ciu2$genero, ciu2$provincia)
chisq.test(tabla2)
library(RVAideMemoire)
y=y1>180
bloque1=rep(1:166,4)
trat1=factor(rep(1:4,rep(166,4)))
cochran.qtest(y~trat1|bloque1,alpha = 0.02,
p.method = "none")
y1=c(esm$monto1,esm$monto3,esm$monto4,esm$monto5)
y=y1>180
bloque1=rep(1:166,4)
trat1=factor(rep(1:4,rep(166,4)))
cochran.qtest(y~trat1|bloque1,alpha = 0.02,
p.method = "none")
##Pregunta 4
ciu4=rbind(azu,bol)
tabla4=table(ciu4$genero,ciu4$provincia)
tabla4
#tabla6<-matrix(c(60,67,75,79),2,2)
fisher.test(tabla4,alternative="l")
##Pregunta 5
mp5=rbind(pic,bol,elo,san)
fligner.test(mp5$monto2, mp5$provincia)
##################
#  EXAMEN FINAL  #
##################
datos=read.delim("clipboard")
azu=subset(datos,provincia=="Azuay")
bol=subset(datos,provincia=="Bolivar")
cañ=subset(datos,provincia=="Cañar")
elo=subset(datos,provincia=="El Oro")
esm=subset(datos,provincia=="Esmeraldas")
gua=subset(datos,provincia=="Guayas")
loj=subset(datos,provincia=="Loja")
man=subset(datos,provincia=="Manabí")
pic=subset(datos,provincia=="Pichincha")
san=subset(datos,provincia=="Santa Elena")
mp1=rbind(pic,gua,azu,loj)
library(agricolae)
waerden.test(mp1$monto5, mp1$provincia, alpha=0.02,
console=T)
v
prov1<-subset(datos,provincia=="Pichincha"|
provincia=="Guayas"|
provincia=="Azuay"|
provincia=="Loja")
waerden.test(prov1$monto5, prov1$provincia, alpha=0.02,
console=T)
View(datos)
##Pregunta 4
ciu4=rbind(cañ,san)
##Pregunta 4
ciu4=rbind(cañ,san)
tabla4=table(ciu4$deuda,ciu4$provincia)
#tabla6<-matrix(c(60,67,75,79),2,2)
fisher.test(tabla4,alternative="l")
tabla4
tabla6<-matrix(c(64,93,68,81),2,2)
fisher.test(tabla6,alternative="l")
##################
#  EXAMEN FINAL  #
##################
datos=read.delim("clipboard")
prov1<-subset(datos,provincia=="Pichincha"|
provincia=="Guayas"|
provincia=="Azuay"|
provincia=="Loja")
library(agricolae)
waerden.test(prov1$monto5, prov1$provincia, alpha=0.02,
console=T)
azu=subset(datos,provincia=="Azuay")
loj=subset(datos,provincia=="Loja")
gua=subset(datos,provincia=="Guayas")
pic=subset(datos,provincia=="Pichincha")
mp1=rbind(pic,gua,azu,loj)
prov1<-subset(datos,provincia=="Pichincha"|
provincia=="Guayas"|
provincia=="Azuay"|
provincia=="Loja")
library(agricolae)
waerden.test(prov1$monto5, prov1$provincia, alpha=0.02,
console=T)
