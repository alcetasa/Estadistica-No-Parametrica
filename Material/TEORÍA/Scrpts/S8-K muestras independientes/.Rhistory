datos=read.delim("clipboard")
#---------------------#
# Prueba de Levene    #
#---------------------#
library(lawstat)
#utilizar la correción por la mediana
levene.test(datos$Peso1,datos$Centro)
#Grafico
qf(0.05,4-1,143-4,lower.tail =F)
shadeDist(qf(0.05,4-1,143-4,lower.tail =F) ,"df",3,139,
lower.tail = F)
#Grafico
qf(0.05,4-1,143-4,lower.tail =F)
shadeDist(qf(0.05,4-1,143-4,lower.tail =F) ,"df",3,139,
lower.tail = F)
#-------------------------------#
# Prueba de Jonckheere-Terpstra #
#-------------------------------#
library(clinfun)
shadeDist(qf(0.05,4-1,143-4,lower.tail =F) ,"df",3,139,
lower.tail = F)
#Grafico
library(fastGraph)
qf(0.05,4-1,143-4,lower.tail =F)
shadeDist(qf(0.03,4-1,143-4,lower.tail =F) ,"df",3,139,
lower.tail = F)
#------------------------------#
# Prueba de Fligner-Killeen    #
#------------------------------#
fligner.test(datos$Peso1, datos$Centro)
#--------------------#
# Prueba de Klotz    #
#--------------------#
library(coin)
klotz_test(datos$Peso1~factor(datos$Centro))
#--------------------#
# Prueba de Conover  #
#--------------------#
library(coin)
conover_test(datos$Peso1, datos$Centro)
conover_test(datos$Peso1, factor(datos$Centro))
conover_test(datos$Peso1~factor(datos$Centro))
#Prueba de comparación
M1<-c1$Peso1
M2<-c2$Peso1
M3<-c3$Peso1
M4<-c4$Peso1
n1<-length(M1)
n2<-length(M2)
c1<-subset(datos,Centro==1)
c2<-subset(datos,Centro==2)
c3<-subset(datos,Centro==3)
c4<-subset(datos,Centro==4)
View(datos)
#Prueba de comparación
M1<-c1$Peso1
M2<-c2$Peso1
M3<-c3$Peso1
M4<-c4$Peso1
n1<-length(M1)
n2<-length(M2)
n3<-length(M3)
n4<-length(M4)
n<-n1+n2+n3+n4
xbar1<-mean(M1)
xbar2<-mean(M2)
xbar3<-mean(M3)
xbar4<-mean(M4)
M1c<-(M1-xbar1)^2
M2c<-(M2-xbar2)^2
M3c<-(M3-xbar3)^2
M4c<-(M4-xbar4)^2
rdc<-rank(c(M1c,M2c,M3c,M4c))
rdc2<-rdc^2
T1<-sum(rdc2[1:n1])
T2<-sum(rdc2[(n1+1):(n1+n2)])
T3<-sum(rdc2[(n1+n2+1):(n1+n2+n3)])
T4<-sum(rdc2[(n1+n2+n3+1):n])
Tbar<-(T1+T2+T3+T4)/n
Vt<-(sum(rdc^4)-n*Tbar^2)/(n-1)
Tcon<-((T1^2/n1+T2^2/n2+T3^2/n3+T4^2/n4)-n*Tbar^2)/Vt
1-pchisq(Tcon,4-1)
Tcon<-((T1^2/n1+T2^2/n2+T3^2/n3+T4^2/n4)-n*Tbar^2)/Vt
Tcon
dif12<-abs(T1/n1-T2/n2)
dif12
vc12<-qt(0.985,n-3)*sqrt((1/n1+1/n2)*Vt*((n-1-Tcon)/(n-4)))
vc12
dif13<-abs(T1/n1-T3/n3)
dif13
dif13
vc13<-qt(0.985,n-3)*sqrt((1/n1+1/n3)*Vt*((n-1-Tcon)/(n-4)))
vc13
dif23<-abs(T2/n2-T3/n3)
dif23
vc23<-qt(0.985,n-3)*sqrt((1/n2+1/n3)*Vt*((n-1-Tcon)/(n-4)))
vc23
#diferencia
dif14<-abs(T1/n1-T4/n4)
dif14
#valor crítico
vc14<-qt(0.985,n-3)*sqrt((1/n1+1/n3)*Vt*((n-1-Tcon)/(n-4)))
vc14
#valor crítico
vc14<-qt(0.985,n-4)*sqrt((1/n1+1/n3)*Vt*((n-1-Tcon)/(n-4)))
vc14
#valor crítico
vc14<-qt(0.985,n-3)*sqrt((1/n1+1/n4)*Vt*((n-1-Tcon)/(n-4)))
vc14
#diferencia
dif23<-abs(T2/n2-T3/n3)
dif23
#valor critico
vc23<-qt(0.985,n-3)*sqrt((1/n2+1/n3)*Vt*((n-1-Tcon)/(n-4)))
vc23
#diferencia
dif24<-abs(T2/n2-T4/n4)
dif24
#valor critico
vc24<-qt(0.985,n-3)*sqrt((1/n2+1/n4)*Vt*((n-1-Tcon)/(n-4)))
vc24
#diferencia 3-4
dif24<-abs(T2/n3-T4/n4)
#diferencia 3-4
dif34<-abs(T2/n3-T4/n4)
dif34
#valor critico
vc34<-qt(0.985,n-3)*sqrt((1/n3+1/n4)*Vt*((n-1-Tcon)/(n-4)))
vc34
#valor critico
vc34<-qt(0.985,n-3)*sqrt((1/n3+1/n4)*Vt*((n-1-Tcon)/(n-4)))
vc34
###########################################
# PRUEBAS PARA UNA MUESTRA K RELACIONADA  #
###########################################
cli=read.delim("clipboard")
#--------------------#
#  Prueba  de Page
#--------------------#
library(DescTools)
View(cli)
#--------------------#
#  Prueba  de Page
#--------------------#
c2= subset(cli, Centro==2)
#--------------------#
#  Prueba  de Page
#--------------------#
c2= subset(cli, Centro==2)
library(DescTools)
y3=c(c2$Peso3, c2$Peso2, c2$Peso1)
trat3=trat<-as.factor(c(rep(1,32),rep(2,32),rep(3,32)))
bloq3=rep(1:32,3)
PageTest(y3,trat3,bloq3)
y3=c(c2$Peso1, c2$Peso2, c2$Peso3)
trat3=trat<-as.factor(c(rep(1,32),rep(2,32),rep(3,32)))
bloq3=rep(1:32,3)
PageTest(y3,trat3,bloq3)
datos=read.delim("clipboard")
datos=read.delim("clipboard")
View(datos)
#-----------------------------#
# Pregunta 1 - Prueba  de Quade
#------------------------------#
#Es una muestra k relacionada, porque es solo una muestra (salón B)
#k=4
B=subset(datos, Salón=="B")
y=c(B$E1,B$E2,B$E3, B$E4)
y=c(B$E1,B$E2,B$E3, B$E4)
trat=trat<-as.factor(c(rep(1,24),rep(2,24),rep(3,24),rep(4,24)))
bloq=rep(1:24,4)
quade.test(y,trat,bloq)
#comparaciones:
library(PMCMR)
posthoc.quade.test(y,trat,bloq)
posthoc.quade.test(y,trat,bloq,p.adj="none")
tapply(y,trat,rank)
com=tapply(y,trat,rank)
com$mean
mean(com$`1`)
com=tapply(y,trat,median)
com
#------------------------------#
#   Pregunta 2 - Q de Cochran
#------------------------------#
A=subset(datos, Salón=="A")
library(RVAideMemoire)
y=c(A$CG1,A$CG2,A$CG3, A$CG4, A&CG5)
y2=c(A$CG1,A$CG2,A$CG3, A$CG4, A$CG5)
bloq=rep(1:34,5)
trat2=factor(rep(1:5,rep(34,5)))
bloq2=rep(1:34,5)
cochran.qtest(y2~trat2|bloq2,alpha=0.04,p.method="none")
com2=tapply(y2,trat2,median)
com2
#--------------------------------#
# Pregunta 3 - Prueba de Terpstra
#--------------------------------#
#Grupos diferentes
library(DescTools)
cen<-factor(datos$Salón,ordered=T)
JonckheereTerpstraTest(datos$E1,cen,alternative="i")
JonckheereTerpstraTest(datos$E1,cen,alternative="d")
#--------------------------------#
# Pregunta 4 - Prueba de Conover
#--------------------------------#
library(coin)
conover_test(datos$E3~factor(datos$Salón))
ABC=subset(aca,Salón!="D")
conover_test(ABC$E3~factor(datos$Salón))
ABC=subset(datos,Salón!="D")
conover_test(ABC$E3~factor(datos$Salón))
conover_test(ABC$E3~as.factor(datos$Salón))
conover_test(ABC$E3~as.factor(ABC$Salón))
datos=read.delim("clipboard")
a=subset(datos,distrito=="A")
b=subset(datos,distrito=="B")
c=subset(datos,distrito=="C")
d=subset(datos,distrito=="D")
e=subset(datos,distrito=="E")
f=subset(datos,distrito=="F")
g=subset(datos,distrito=="G")
h=subset(datos,distrito=="H")
i=subset(datos,distrito=="I")
j=subset(datos,distrito=="J")
k=subset(datos,distrito=="K")
datos2=rbind(g,k,j,d)
library(agricolae)
Median.test(datos2$delitos,datos2$distrito,alpha = 0.02)
#H0: me1=me2=me3=me4
#H1: Al menos una media es diferente a las demás
#Análisis previo
boxplot(datos2$delitos~datos2$distrito,col=3)
